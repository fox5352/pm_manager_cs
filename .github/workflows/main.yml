name: Build and Publish WinForms App

on:
  # Trigger on pushes to specific branches
  push:
    branches:
      - master    # Triggers when pushing to master branch
      - main     # Also trigger on main if you use that instead
    tags:
      - 'v*'     # Triggers when pushing any tag starting with 'v'
  
  # Allows manual trigger from GitHub UI
  workflow_dispatch:

permissions:
  contents: write
  packages: write

jobs:
  build:
    runs-on: windows-latest
    
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Get Version
      id: get_version
      shell: powershell
      run: |
        # Try to get version from git tag
        $tag = git describe --tags --abbrev=0
        if ($tag) {
          $version = $tag.TrimStart('v')
        } else {
          # Default to version from AssemblyInfo if no tag
          $assemblyFile = "pm_manager\Properties\AssemblyInfo.cs"
          $pattern = '\[assembly: AssemblyVersion\("(.*)"\)\]'
          $content = Get-Content $assemblyFile
          $version = $content | Select-String -Pattern $pattern | ForEach-Object { $_.Matches.Groups[1].Value }
          if (!$version) {
            $version = "1.0.0"
          }
        }
        echo "VERSION=$version" >> $env:GITHUB_OUTPUT
    
    - name: Setup MSBuild
      uses: microsoft/setup-msbuild@v2
      
    - name: Setup NuGet
      uses: NuGet/setup-nuget@v2
      
    - name: Download .NET Framework 4.8 Offline Installer
      shell: powershell
      run: |
        Invoke-WebRequest -Uri "https://download.microsoft.com/download/6/E/4/6E48E8AB-DC00-419E-9704-06DD46E5F81D/NDP48-x86-x64-AllOS-ENU.exe" -OutFile "ndp48-x86-x64-allos-enu.exe"
    
    - name: Restore NuGet packages
      run: nuget restore pm_manager.sln
      
    - name: Build application
      run: msbuild pm_manager.sln /p:Configuration=Release /p:Platform="Any CPU" /p:TargetFrameworkVersion=v4.8
      
    - name: Create Release Folder
      run: |
        mkdir Release
        copy pm_manager\bin\Release\*.exe Release\
        copy pm_manager\bin\Release\*.config Release\
        copy pm_manager\bin\Release\*.dll Release\
      shell: cmd
      
    - name: Create Final Package
      run: |
        # Create a directory for the complete package
        mkdir CompletePackage
        # Copy the .NET Framework installer
        copy ndp48-x86-x64-allos-enu.exe CompletePackage\
        # Copy your application files
        xcopy /E /I Release CompletePackage\Application\
        # Create a simple batch installer
        @echo @echo Installing .NET Framework 4.8... > CompletePackage\install.bat
        @echo start /wait ndp48-x86-x64-allos-enu.exe /q /norestart >> CompletePackage\install.bat
        @echo @echo Starting application... >> CompletePackage\install.bat
        @echo start Application\PMManager.exe >> CompletePackage\install.bat
        # Create readme
        @echo This package includes: > CompletePackage\README.txt
        @echo - .NET Framework 4.8 Offline Installer >> CompletePackage\README.txt
        @echo - PM Manager Application >> CompletePackage\README.txt
        @echo. >> CompletePackage\README.txt
        @echo Installation Instructions: >> CompletePackage\README.txt
        @echo 1. Run install.bat to install .NET Framework and launch the application >> CompletePackage\README.txt
      shell: cmd
      
    - name: Zip Package
      run: |
        7z a -tzip CompletePackage.zip .\CompletePackage\*
      shell: cmd
      
    - name: Create GitHub Release
      id: create_release
      uses: softprops/action-gh-release@v1
      with:
        files: CompletePackage.zip
        name: Release v${{ steps.get_version.outputs.VERSION }}
        tag_name: v${{ steps.get_version.outputs.VERSION }}
        draft: false
        prerelease: false
        body: |
          Release v${{ steps.get_version.outputs.VERSION }}
          
          ## What's Changed
          * Added offline installer with .NET Framework 4.8
          * Automated release from master branch
          
          ## Installation (Offline)
          1. Download and extract CompletePackage.zip
          2. Run install.bat - this will:
             - Install .NET Framework 4.8 (if needed)
             - Launch the application
          
          ### System Requirements
          - Windows 7 SP1 or later
          - No internet connection required!
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
