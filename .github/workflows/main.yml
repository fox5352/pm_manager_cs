name: Build and Publish WinForms App

on:
  push:
    branches:
      - master
      - main
    tags:
      - 'v*'
  workflow_dispatch:

permissions:
  contents: write
  packages: write

jobs:
  build:
    runs-on: windows-latest
    
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Get Version
      id: get_version
      shell: powershell
      run: |
        # Try to get version from git tag
        $tag = git describe --tags --abbrev=0
        if ($tag) {
          $version = $tag.TrimStart('v')
        } else {
          # Default to version from AssemblyInfo if no tag
          $assemblyFile = "pm_manager\Properties\AssemblyInfo.cs"
          $pattern = '\[assembly: AssemblyVersion\("(.*)"\)\]'
          $content = Get-Content $assemblyFile
          $version = $content | Select-String -Pattern $pattern | ForEach-Object { $_.Matches.Groups[1].Value }
          if (!$version) {
            $version = "1.0.0"
          }
        }
        echo "VERSION=$version" >> $env:GITHUB_OUTPUT
    
    - name: Setup MSBuild
      uses: microsoft/setup-msbuild@v2
      
    - name: Setup NuGet
      uses: NuGet/setup-nuget@v2
      
    - name: Download .NET Framework 4.8 Offline Installer
      shell: powershell
      run: |
        # New download URL for .NET Framework 4.8
        $url = "https://go.microsoft.com/fwlink/?LinkId=2085155"
        
        # Add error handling for the download
        try {
          $ProgressPreference = 'SilentlyContinue'    # Makes the download faster
          Write-Host "Downloading .NET Framework 4.8 offline installer..."
          Invoke-WebRequest -Uri $url -OutFile "ndp48-x86-x64-allos-enu.exe"
          
          # Verify the download
          if (Test-Path "ndp48-x86-x64-allos-enu.exe") {
            $fileSize = (Get-Item "ndp48-x86-x64-allos-enu.exe").Length
            if ($fileSize -lt 1MB) {
              throw "Downloaded file is too small, might be corrupted"
            }
            Write-Host "Download completed successfully"
          } else {
            throw "Download failed - file not found"
          }
        }
        catch {
          Write-Host "Error downloading .NET Framework 4.8: $_"
          Write-Host "Please consider adding the installer directly to your repository"
          exit 1
        }
    
    - name: Restore NuGet packages
      run: nuget restore pm_manager.sln
      
    - name: Build application
      run: msbuild pm_manager.sln /p:Configuration=Release /p:Platform="Any CPU" /p:TargetFrameworkVersion=v4.8
      
    - name: Create Release Folder
      run: |
        mkdir Release
        copy pm_manager\bin\Release\*.exe Release\
        copy pm_manager\bin\Release\*.config Release\
        copy pm_manager\bin\Release\*.dll Release\
      shell: cmd
      
    - name: Create Final Package
      run: |
        mkdir CompletePackage
        copy ndp48-x86-x64-allos-enu.exe CompletePackage\
        xcopy /E /I Release CompletePackage\Application\
        
        rem Create enhanced installer batch file
        (
          echo @echo off
          echo echo Checking for .NET Framework 4.8...
          echo reg query "HKLM\SOFTWARE\Microsoft\NET Framework Setup\NDP\v4\Full" /v Release 2^>nul ^| find "528040" ^>nul
          echo if %%ERRORLEVEL%% == 0 ^(
          echo     echo .NET Framework 4.8 is already installed.
          echo ^) else ^(
          echo     echo Installing .NET Framework 4.8...
          echo     start /wait ndp48-x86-x64-allos-enu.exe /q /norestart
          echo     if %%ERRORLEVEL%% == 0 ^(
          echo         echo Installation completed successfully.
          echo     ^) else ^(
          echo         echo Installation failed with error code %%ERRORLEVEL%%
          echo         pause
          echo         exit /b %%ERRORLEVEL%%
          echo     ^)
          echo ^)
          echo echo Starting application...
          echo start Application\PMManager.exe
        ) > CompletePackage\install.bat
        
        rem Create detailed readme
        (
          echo PM Manager Installation Package
          echo ==============================
          echo.
          echo Contents:
          echo ---------
          echo 1. .NET Framework 4.8 Offline Installer
          echo 2. PM Manager Application
          echo.
          echo Installation Instructions:
          echo ------------------------
          echo 1. Extract all files from this package
          echo 2. Right-click install.bat and select "Run as administrator"
          echo 3. The installer will:
          echo    - Check if .NET Framework 4.8 is already installed
          echo    - Install it if needed ^(no internet required^)
          echo    - Launch the application automatically
          echo.
          echo Troubleshooting:
          echo ---------------
          echo - If you see any errors, try running install.bat as administrator
          echo - The installer will pause on errors so you can read the message
          echo - Installation logs can be found in %%TEMP%% directory
        ) > CompletePackage\README.txt
      shell: cmd
      
    - name: Zip Package
      run: |
        7z a -tzip CompletePackage.zip .\CompletePackage\*
      shell: cmd
      
    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        files: CompletePackage.zip
        name: Release v${{ steps.get_version.outputs.VERSION }}
        tag_name: v${{ steps.get_version.outputs.VERSION }}
        draft: false
        prerelease: false
        body: |
          Release v${{ steps.get_version.outputs.VERSION }}
          
          ## What's Changed
          * Added offline installer with .NET Framework 4.8
          * Improved installation script with error handling
          * Added detailed README with troubleshooting steps
          
          ## Installation (Offline)
          1. Download and extract CompletePackage.zip
          2. Run install.bat as administrator
          3. The installer will automatically:
             - Check for .NET Framework 4.8
             - Install it if needed (no internet required)
             - Launch the application
          
          ### System Requirements
          - Windows 7 SP1 or later
          - No internet connection required!
          
          ### Troubleshooting
          If you encounter any issues during installation:
          1. Make sure to run install.bat as administrator
          2. Check the README.txt file for detailed instructions
          3. Installation logs can be found in the %TEMP% directory
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
